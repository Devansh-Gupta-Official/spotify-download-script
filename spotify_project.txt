workflow:

1. extract data from spotify (scrape songs)
  - access token base64
  - .env
  - spotipy
  - write to cvs
 
2. search data on youtube and get url
  - use youtube api

3. download data in mp3 using a library
  - pytube

4. upload to phone

(scraping the list of songs on a playlist using BS4 and requests, searching them on YouTube using yt-api and downloading using pytube only the audio stream, then separating audio from the mp4 using moviepy)
(we can save all mp3 downloads and mp4 downloads in 2 seperate zip files)
(on the web app, the user can chhose mp3 or mp4, we provide the respective zip file)


5. pipeline the process/ create streamlit app and run all scripts through it
   - add animations
   - progress bar
   - database


6. future scope
   - resolve age restriction
   - make the process faster
   - make the webiste better/ beautiful
   - make it for other apps like apple music,etc
   - auto detect from link whether it is apple music, spotify and if it is an album or playlist and change animation accordingly
   - add st.caches
   
7. documentation

8. extension make
   - user goes to playlist and switches on extension
   - extension reads playlist link and gives zip file
   